<?php

declare(strict_types=1);

use Application\View\HelperTrait;
use Laminas\View\Renderer\PhpRenderer;

/** @var PhpRenderer|HelperTrait $this */
?>
<script>
var urlTemplate = '<?= $this->url('organ/info', array(
    'type' => '__type__',
    'number' => '__number__',
    'point' => '__point__',
    'decision' => '__decision__',
    'sequence' => '__sequence__'
)) ?>';
function getUrl(type, meeting, point, decision, sequence)
{
    url = urlTemplate.replace('__type__', type);
    url = url.replace('__number__', meeting);
    url = url.replace('__point__', point);
    url = url.replace('__decision__', decision);
    return url.replace('__sequence__', sequence);
}
$(document).ready(function () {
    $('#abolish-organ').autocomplete({
            minLength: 1, // at least two chars before request
            delay: 0, // no delay before request
            source: function (rq, response) {
                // make an AJAX request
                $.ajax({
                    dataType: 'json',
                    url: '<?= $this->url('organ/default', ['action' => 'search']) ?>?q=' + rq.term,
                    context: document.body
                }).done(function(data) {
                    var ret = [];
                    $.each(data.json, function (idx, organ) {
                        // assemble organ info and add to list
                        var decision = organ.meeting_type + ' '
                                     + organ.meeting_number + '.'
                                     + organ.decision_point + '.'
                                     + organ.decision_number;

                        var name = organ.abbr + ' (' + organ.name + ', ' + decision + ')';

                        ret.push({
                            label: name,
                            value: name,
                            id: organ
                        });
                    });

                    // show data
                    response(ret);
                });
            },
            select: function (event, ui) {
                $.ajax({
                    dataType: 'json',
                    url: getUrl(ui.item.id.meeting_type, ui.item.id.meeting_number, ui.item.id.decision_point, ui.item.id.decision_number, ui.item.id.subdecision_sequence),
                    context: document.body
                }).done(function(data) {
                    // show all members
                    $('#div-members-abolish').show();
                    var content = '';
                    $.each(data.json.members, function(idx, member) {
                        var installationCount = member.installations.length;
                        var functionCount = 0;
                        content += '<li>' + member.member.fullName + ' (';

                        $.each(member.installations, function (idx, install) {
                            content += install.function;

                            if (
                                2 === installationCount
                                && 0 === functionCount
                            ) {
                                content += ' en ';
                            } else if (2 < installationCount) {
                                content += ', ';

                                if (functionCount === installationCount - 1) {
                                    content += 'en ';
                                }
                            }

                            functionCount++;
                        });

                        content += ')</li>';
                    });
                    $('#members-abolish').html(content);

                    $('#abolish-meeting-type').val(ui.item.id.meeting_type);
                    $('#abolish-meeting-number').val(ui.item.id.meeting_number);
                    $('#abolish-decision-point').val(ui.item.id.decision_point);
                    $('#abolish-decision-number').val(ui.item.id.decision_number);
                    $('#abolish-sequence').val(ui.item.id.subdecision_sequence);
                    $('#abolish-button').prop('disabled', false);
                });
            }
        });
});
</script>
<?php
$form = $this->form;
$form->prepare();

$form->setAttribute('action', $this->url('meeting/decision/form', array('form' => 'abolish')));
$form->setAttribute('method', 'post');

$form->setAttribute('role', 'form');

echo $this->form()->openTag($form);
?>
<?php /* first do hidden elements */ ?>
<?php
$fs = $form->get('meeting')
?>
<?= $this->formHidden($fs->get('type')) ?>
<?= $this->formHidden($fs->get('number')) ?>
<?= $this->formHidden($form->get('point')) ?>
<?= $this->formHidden($form->get('decision')) ?>
<?php
$fs = $form->get('subdecision');
?>
<?php
$element = $fs->get('meeting_type');
$element->setAttribute('id', 'abolish-meeting-type');
?>
<?= $this->formHidden($element) ?>
<?php
$element = $fs->get('meeting_number');
$element->setAttribute('id', 'abolish-meeting-number');
?>
<?= $this->formHidden($element) ?>
<?php
$element = $fs->get('decision_point');
$element->setAttribute('id', 'abolish-decision-point');
?>
<?= $this->formHidden($element) ?>
<?php
$element = $fs->get('decision_number');
$element->setAttribute('id', 'abolish-decision-number');
?>
<?= $this->formHidden($element) ?>
<?php
$element = $fs->get('sequence');
$element->setAttribute('id', 'abolish-sequence');
?>
<?= $this->formHidden($element) ?>
<div class="form-group">
<?php
$element = $form->get('name');
$element->setAttribute('class', 'form-control');
$element->setAttribute('id', 'abolish-organ');
$element->setAttribute('placeholder', $this->translate('Organ'));
?>
    <?= $this->formLabel($element) ?>
    <?= $this->formInput($element) ?>
    <?= $this->formElementErrors($element) ?>
    <input type="hidden" class="organ-decision">
</div>

<div style="display: none;" id="div-members-abolish">
    <strong><?= $this->translate('The organ to be abolished includes the following members:') ?></strong>
    <ul id="members-abolish">
    </ul>
</div>

<?php
$submit = $form->get('submit');
$submit->setLabel($this->translate('Abolish Organ'));
$submit->setAttribute('class', 'btn btn-primary');
$submit->setAttribute('id', 'abolish-button');
$submit->setAttribute('disabled', 'disabled');
?>
<?= $this->formButton($submit) ?>

<?= $this->form()->closeTag(); ?>
